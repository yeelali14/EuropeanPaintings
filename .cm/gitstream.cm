# -*- mode: yaml -*-

manifest:
  version: 1.0
checks:
  content:
    is:
      images_only: {{ files | allImages }}
      docs_only: {{ files | allDocs }}
      tests_only: {{ files | allTests }}
      no_php: {{ files | filterListRegex(['php']) | length === 0 }}
      has_gitstream_file: {{ files | filterList(['gitstream.cm']) | length > 0}}
      small_pr: {{ branch | estimatedReviewTime < 5 }}
      types_only: {{ files | isEveryInListRegex(['.type']) }}
      has_types: {{ files | isSomeInList(['.type']) }}
      has_consts: {{ files | isSomeInListRegex(['.const']) }}
      has_index_file: {{ files | isStringIncludes(['index']) }}
      has_md_file: {{ files | isStringIncludesRegex(['.md']) }}
      assets_only: {{ files | isEveryInList(['png', 'jpg', 'svg']) }}
      js_extensions_files: {{ files | extractExtensions(['.js']) }}
      has_js_files_only: {{ files | isEveryExtensionRegex(['.js']) }}
      formatting: {{ source.diff.files | isFormattingChange }}
      logs_only: {{ source.diff.files | isEveryLineInFileDiffRegex('^\\+.*console\\.log') }}
      filter_ts: {{ source.diff.files | filter(attr='new_file', regex='\\.ts$') }}
      filter_diff: {{ source.diff.files | matchDiffLines(regex='^\\+.*console\\.log', ignoreWhiteSpaces=true) | every }}
# The `automations` section includes a list of automation that applies 
# to the repo in which gitStream is installed. Each automation has an 
# `if` key with a list of the necessary assertions, as well as a `run` key with a
# list of all actions. All the listed assertions need to pass in order 
# for the following actions to be executed (there is AND relation between conditions).

# Each automation under the `automations` section is independent of the others. 
# Every time a PR is opened or changed, the automation's conditions are evaluated (the `if`). 
# The actions under `run` are executed one by one if all the conditions pass. 

# Conditions consists of an expression, which are wrapped with double curly braces, and 
# includes a context variable like `files` and filter functions like `length`. Filters 
# functions are essentially functions that can be applied to context variables. They are 
# called with a pipe operator (|) and can take arguments. Read more on 
# [Filter functions page](https://linear-b.github.io/gitstream-mkdocs/23_gitstream-filters/).

automations:
  filter_ts:
    if:
      - {{ checks.content.is.filter_ts }}
    run: 
      - action: add-labels@v1
        engine: gitstream
        args:
          labels: ["ts-only"]
      - action: add-comment@v1
        args:
          comment: ts only 
  filter_diff:
    if:
      - {{ checks.content.is.filter_diff }}
    run: 
      - action: add-labels@v1
        engine: gitstream
        args:
          labels: ["filter-diff"]
      - action: add-comment@v1
        args:
          comment: diff has only console logs changes