# -*- mode: yaml -*-

manifest:
  version: 1.0
config:
  ignore_files:
    - 'yarn.lock'
    - 'package-lock.json'
    - 'openapi.json'
    - 'ui/src/**/*Model.d.ts'
    - '*.md'
checks:
  content:
    is:
      images_only: {{ files | allImages }}
      docs_only: {{ files | allDocs }}
      tests_only: {{ files | allTests }}
      small_pr: {{ branch | estimatedReviewTime < 5 }}
      formatting: {{ source.diff.files | isFormattingChange }}
      filter_ts: {{ source.diff.files | filter(attr='new_file', regex='\\.ts$') }}
      logs_only_diff: {{ source.diff.files | matchDiffLines(regex='^\\+.*console\\.log', ignoreWhiteSpaces=true) | every }}
      match_logs: {{ source.diff.files | match(attr='diff', term='console.log') | some }}
      new_handler: {{ source.diff.files | map(attr='new_file') | match(term='handler.js') | some }}
automations:
  # This is the name of the review automation. You can use whatever name, a meaningful name 
  # will help to identify it in the future. Each automation name in this file should be unique.
  formatting_safe_changes:
    # The `if` key has a list of conditions, each condition is specified as a Jinja expression
    # in a double curly braces. Expressions are evaluated by gitStream on a PR when triggered.
    if:
      # Given the PR code changes, check that only formatting changes were made 
      - {{ source.diff.files | isFormattingChange }}
    # `run` key has a list of actions, which are executed one by one whenever the automation 
    # conditions are met. 
    run: 
      # When the changes are validated as formatting only, you can help to speed up the review 
      # by adding a label that marks it accordingly.
      - action: add-label@v1
        args:
          label: 'formatting-changes'
      # You can uncomment the following action to get gitStream can even automatically approve 
      # such PRs to save reviewers time for such changes.
      # - action: approve@v1

  docs_safe_changes:
    if:
      # Given the PR files changes, check that only documents were changed.
      - {{ files | allDocs }}
    run: 
      - action: add-label@v1
        args:
          label: 'docs-changes'
      - action: approve@v1

  tests_safe_changes:
    if:
      # Given the PR files changes, check that only tests were changed. The allTests filter checks for 
      # the substring `test` or `spec` in the file path or file name.
      - {{ files | allTests }}
    run: 
      - action: add-label@v1
        args:
          label: 'tests-changes'
      - action: approve@v1

  images_safe_changes:
    if:
      # Check for every changed file if is a document file. The allImages filter checks for
      # common file extensions used for graphics.
      - {{ files | allImages }}
    run:
      - action: add-label@v1
        args:
          label: 'images'
      - action: approve@v1

  mark_long_review:
    if:
      # gitStream estimatedReviewTime filter calculates the estimated review time in minutes
      # based on a statistical model. Review that takes more than 20 minutes is considered 
      # bad practice and therefore marked accordingly.
      - {{ branch | estimatedReviewTime >= 20 }}
      - {{ files | length >= 10  }}
    run:
      - action : add-label@v1
        args:
          label: 'long-review'
          color: '#D2222D'

  mark_short_review:
    if:
      # gitStream estimatedReviewTime filter calculates the estimated review time in minutes
      # based on a statistical model. Review that takes more than 20 minutes is considered 
      # bad practice and therefore marked accordingly.
      - {{ branch | estimatedReviewTime <= 5 }}
      - {{ files | length <= 2  }}
    run:
      - action : add-label@v1
        args:
          label: 'short-review'
          color: '#238823'
  logs_only_diff:
    if:
      - {{ checks.content.is.logs_only_diff }}
    run: 
      - action: add-labels@v1
        engine: gitstream
        args:
          labels: ["logs-only-diff"]
  match_logs:
    if:
      - {{ checks.content.is.match_logs }}
    run: 
      - action: add-labels@v1
        engine: gitstream
        args:
          labels: ["some-logs"]
